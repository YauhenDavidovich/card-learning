{"version":3,"sources":["reportWebVitals.ts","ui/ui-header/Header.tsx","components/newPassword/NewPassword.tsx","components/login/Login.tsx","components/profile/Profile.tsx","components/recoveryPassword/RecoveryPassword.tsx","components/registration/Registration.tsx","ui/ui-main/Main.tsx","App.tsx","bll/login-reducer.ts","bll/store.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","to","NewPassword","Login","Profile","RecoveryPassword","Registration","Main","path","element","App","initialState","email","login","idUser","isAuth","LOGIN","LOGOUT","rootReducer","combineReducers","state","action","type","_id","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAceA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,8BCOCQ,EAbA,WAEX,OACI,gCACI,cAAC,IAAD,CAASC,GAAG,SAAZ,mBACA,cAAC,IAAD,CAASA,GAAG,gBAAZ,0BACA,cAAC,IAAD,CAASA,GAAG,qBAAZ,+BACA,cAAC,IAAD,CAASA,GAAG,WAAZ,qBACA,cAAC,IAAD,CAASA,GAAG,gBAAZ,8B,OCDGC,EARK,WAEhB,OACI,oDCKOC,EARD,WAEV,OACI,kDCKOC,EARC,WAEZ,OACI,gDCKOC,EARU,WAErB,OACI,yDCKOC,EARM,WAEjB,OACI,qDCmBOC,EAhBF,WAET,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,MACrC,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,qBAAqBC,QAAS,cAAC,EAAD,MAC1C,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,UCFlCC,MATf,WACI,OACI,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,Q,uBCTRC,EAAe,CACfC,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRC,QAAQ,GA4BNC,EAAU,6BACVC,EAAW,6BC7BXC,EAAcC,YAAgB,CAChCN,MDKwB,WAAwE,IAAvEO,EAAsE,uDAA9DT,EAAcU,EAAgD,uCAC/F,OAAQA,EAAOC,MACX,KAAKN,EAOL,KAAKC,EACD,OAAO,2BACAG,GADP,IAEIR,MAAOS,EAAOT,MACdE,OAAQO,EAAOE,IACfR,OAAQM,EAAON,SAEvB,QACI,OAAOK,MCdbI,EAAQC,YAAYP,EAAaQ,YAAgBC,MAEvDC,SAAOJ,MAAQA,ECNfK,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACI,cAAC,EAAD,UAIZQ,SAASC,eAAe,SAM5B1C,M","file":"static/js/main.9bf7a938.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <div>\r\n            <NavLink to=\"/login\">Login</NavLink>\r\n            <NavLink to=\"/new-password\">New Password</NavLink>\r\n            <NavLink to=\"/recovery-password\">Recovery Password</NavLink>\r\n            <NavLink to=\"/profile\">Profile</NavLink>\r\n            <NavLink to=\"/registration\">Registration</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst NewPassword = () => {\r\n\r\n    return (\r\n        <>NewPassword</>\r\n\r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n;\r\n","import React from 'react';\r\n\r\nconst Login = () => {\r\n\r\n    return (\r\n        <>LoginPage</>\r\n\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nconst Profile = () => {\r\n\r\n    return (\r\n        <>Profile</>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react';\r\n\r\nconst RecoveryPassword = () => {\r\n\r\n    return (\r\n        <>RecoveryPassword</>\r\n\r\n    )\r\n}\r\n\r\nexport default RecoveryPassword\r\n","import React from 'react';\r\n\r\nconst Registration = () => {\r\n\r\n    return (\r\n        <>Registration</>\r\n\r\n    )\r\n}\r\n\r\nexport default Registration\r\n","import React from 'react';\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport NewPassword from \"../../components/newPassword/NewPassword\";\r\nimport Login from \"../../components/login/Login\";\r\nimport Profile from \"../../components/profile/Profile\";\r\nimport RecoveryPassword from \"../../components/recoveryPassword/RecoveryPassword\";\r\nimport Registration from \"../../components/registration/Registration\";\r\n\r\nconst Main = () => {\r\n\r\n    return (\r\n        <Routes >\r\n            <Route path='/login' element={<Login/>}/>\r\n            <Route path='/new-password' element={<NewPassword/>}/>\r\n            <Route path='/profile' element={<Profile/>}/>\r\n            <Route path='/recovery-password' element={<RecoveryPassword/>}/>\r\n            <Route path='/registration' element={<Registration/>}/>\r\n            {/*<Route path='/404' element={<NotFound/>}/>*/}\r\n        </Routes>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport './App.css';\nimport Header from \"./ui/ui-header/Header\";\nimport Main from \"./ui/ui-main/Main\";\n\nfunction App() {\n    return (\n        <>\n            <Header/>\n            <Main/>\n        </>\n    )\n}\n\nexport default App;\n","let initialState = {\r\n    email: \"\",\r\n    login: \"\",\r\n    idUser: \"\",\r\n    isAuth: false\r\n};\r\n\r\nexport type LoginInitialStateType = typeof initialState;\r\n\r\n//Reducer\r\nexport const loginReducer = (state = initialState, action: ActionsTypes): LoginInitialStateType => {\r\n    switch (action.type) {\r\n        case LOGIN:\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                idUser: action._id,\r\n                isAuth: action.isAuth,\r\n            }\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                idUser: action._id,\r\n                isAuth: action.isAuth,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst LOGIN   = 'card-learning/login/LOG-IN';\r\nconst LOGOUT   = 'card-learning/login/LOG-IN';\r\n\r\n\r\n// Action Creators\r\nexport const SetIsLoggedIn = (email: string, _id: string, isAuth: boolean) => ({\r\n    type: LOGIN,\r\n    email,\r\n    _id,\r\n    isAuth\r\n} as const);\r\n\r\nexport const SetIsLoggedOut = (email: string, _id: string, isAuth: boolean) => ({\r\n    type: LOGOUT,\r\n    email,\r\n    _id,\r\n    isAuth\r\n} as const);\r\n\r\nexport type SetIsLoggedInType = ReturnType<typeof SetIsLoggedIn>;\r\nexport type SetIsLoggedOutType = ReturnType<typeof SetIsLoggedOut>;\r\ntype ActionsTypes = SetIsLoggedOutType | SetIsLoggedInType\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport {loginReducer} from \"./login-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never;\r\nexport type InferActionTypes<T extends { [key: string]: (...args: any) => any }> = ReturnType<PropertiesType<T>>\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport default // @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./bll/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}